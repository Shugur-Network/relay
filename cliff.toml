# cliff.toml
# Configuration file for git-cliff
# Supports automated changelog management with "Unreleased" section tracking

[changelog]
# changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}](https://github.com/Shugur-Network/Relay/compare/{{ previous.version }}...{{ version }}) ({{ timestamp | date(format="%Y-%m-%d") }})
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{{ commit.message | upper_first }}{% if commit.breaking %} **BREAKING CHANGE**{% endif %} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/Shugur-Network/Relay/commit/{{ commit.id }}))\
    {% endfor %}
{% endfor %}

"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process the commits starting from the latest tag
starting_commit = "latest_tag"
# sort the commits chronologically
sort_commits = "oldest"
# limit the number of commits to parse
commit_limit = 200
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance Improvements" },
    { message = "^refactor", group = "Code Refactoring" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Tests" },
    { message = "^build", group = "Build System" },
    { message = "^ci", group = "Continuous Integration" },
    { message = "^chore\\(release\\):", skip = true },
    { message = "^chore\\(deps\\)", group = "Dependencies" },
    { message = "^chore", group = "Miscellaneous Tasks" },
    { message = "^revert", group = "Reverts" },
    { body = ".*security", group = "Security" },
    { body = ".*breaking change", group = "BREAKING CHANGES" },
]
# protect breaking changes from being skipped
protect_breaking_commits = true
# filter out the commits that are not matched by commit_parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the tags by date
sort_tags = "newest"
# limit the number of tags to parse
tag_limit = 20
# custom remote for parsing commits
[git.remote]
owner = "Shugur-Network"
repo = "Relay"
