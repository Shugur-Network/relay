version: "3.8"

services:
  relay:
    build:
      context: ../..
      dockerfile: docker/Dockerfile
      target: production
      args:
        VERSION: ${VERSION:-latest}
        COMMIT: ${COMMIT:-unknown}
        DATE: ${DATE:-unknown}
    image: ghcr.io/shugur-network/relay:${VERSION:-latest}
    restart: unless-stopped
    ports:
      - "${RELAY_WS_PORT:-8080}:8080"
      - "${RELAY_METRICS_PORT:-8181}:8181"
    environment:
      - SHUGUR_ENV=production
      - SHUGUR_DB_HOST=cockroach
      - SHUGUR_DB_PORT=26257
      - SHUGUR_DB_DATABASE=shugur
      - SHUGUR_DB_USER=relay
      - SHUGUR_DB_PASSWORD_FILE=/run/secrets/db_password
      - SHUGUR_DB_SSL_MODE=require
      - SHUGUR_LOG_LEVEL=${LOG_LEVEL:-info}
      - SHUGUR_LOG_FORMAT=json
      - SHUGUR_METRICS_ENABLED=true
      - SHUGUR_WS_PORT=8080
      - SHUGUR_METRICS_PORT=8181
      - SHUGUR_MAX_CONNECTIONS=${MAX_CONNECTIONS:-1000}
      - SHUGUR_RATE_LIMIT=${RATE_LIMIT:-10}
    volumes:
      - relay_config:/app/config:ro
      - relay_data:/app/data
      - relay_logs:/app/logs
    secrets:
      - db_password
      - relay_config
    depends_on:
      cockroach:
        condition: service_healthy
    healthcheck:
      test: ["/usr/local/bin/relay", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  cockroach:
    image: cockroachdb/cockroach:v24.1.5
    restart: unless-stopped
    command: start-single-node --insecure=false --certs-dir=/certs --advertise-addr=cockroach
    ports:
      - "${DB_PORT:-26257}:26257"
      - "${DB_HTTP_PORT:-8080}:8080"
    environment:
      - COCKROACH_DATABASE=shugur
      - COCKROACH_USER=relay
    volumes:
      - cockroach_data:/cockroach/cockroach-data
      - cockroach_certs:/certs:ro
    secrets:
      - db_password
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "https://cockroach:8080/health?ready=1",
          "--cacert",
          "/certs/ca.crt",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"

  prometheus:
    image: prom/prometheus:v2.54.1
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    volumes:
      - prometheus_config:/etc/prometheus:ro
      - prometheus_data:/prometheus
    depends_on:
      - relay
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:9090/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  grafana:
    image: grafana/grafana:11.3.1
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_config:/etc/grafana:ro
    secrets:
      - grafana_password
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - nginx_config:/etc/nginx:ro
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - relay
      - grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
        reservations:
          memory: 128M
          cpus: "0.1"

volumes:
  relay_config:
    driver: local
  relay_data:
    driver: local
  relay_logs:
    driver: local
  cockroach_data:
    driver: local
  cockroach_certs:
    driver: local
  prometheus_config:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  grafana_config:
    driver: local
  nginx_config:
    driver: local
  nginx_certs:
    driver: local
  nginx_logs:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt
  relay_config:
    file: ./config/production.yaml
  grafana_password:
    file: ./secrets/grafana_password.txt

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
